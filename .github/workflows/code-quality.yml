name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit pip-audit

    - name: Run bandit security checks
      run: |
        bandit -r django_yoloquery/ || true

    - name: Run pip-audit dependency checks
      run: |
        pip-audit || true

  coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[test]
        pip install coverage pytest-cov

    - name: Run tests with coverage
      run: |
        coverage run -m pytest tests/
        coverage report --show-missing
        coverage xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Check README
      run: |
        python -c "
        import re
        with open('README.md') as f:
            content = f.read()
        # Check for basic sections
        required_sections = ['Install', 'Configure', 'TL;DR', 'Why?']
        for section in required_sections:
            if section not in content:
                raise ValueError(f'Missing {section} section in README')
        print('README validation passed')
        "

    - name: Validate package metadata
      run: |
        python -m pip install --upgrade pip build twine
        python -m build
        twine check dist/*